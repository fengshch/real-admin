plugins{
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'idea'
}

group = projectGroup
version=projectVersion

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
//    maven { url 'https://maven.aliyun.com/repository/public/' }
//    maven { url 'https://maven.aliyun.com/repository/spring/'}
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation(libs.mapstruct)
//    testImplementation(libs.mapstruct)

//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor(libs.mapstructProcessor)
//    testAnnotationProcessor(libs.mapstructProcessor)
    annotationProcessor(libs.lombokMapstructBinding)
    testAnnotationProcessor(libs.lombokMapstructBinding)
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

idea{
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}